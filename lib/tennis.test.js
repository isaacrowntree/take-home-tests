import startMatch from './tennis';

describe('Tennis Game', () => {
  const name1 = 'Isaac';
  const name2 = 'Silvana';

  const returnedObject = {
    player1: { name: name1 },
    player2: { name: name2 },
  };

  describe('Set up a Match', () => {
    test('Returns a match object', () => {
      expect(
        startMatch(name1, name2),
      ).toMatchObject(returnedObject);
    });
  });

  describe('Show correct score of', () => {
    test.each`
      pointsPlayed                                | result
      ${[
  ]}                                              | ${'0-0, 0-0'}
      ${[
    [1, 0],
  ]}                                              | ${'0-0, 15-0'}
      ${[
    [1, 0], [1, 0],
  ]}                                              | ${'0-0, 30-0'}
      ${[
    [1, 0], [1, 0], [1, 0],
  ]}                                              | ${'0-0, 40-0'}
      ${[
    [0, 1],
  ]}                                              | ${'0-0, 0-15'}
      ${[
    [0, 1], [0, 1],
  ]}                                              | ${'0-0, 0-30'}
      ${[
    [0, 1], [0, 1], [0, 1],
  ]}                                              | ${'0-0, 0-40'}
      ${
  [[0, 1], [0, 1], [0, 1], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${'0-0, Deuce'}
      ${[
    [0, 1], [0, 1], [0, 1], [1, 0], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${`0-0, Advantage ${name1}`}
      ${[
    [0, 1], [0, 1], [0, 1], [1, 0], [1, 0], [1, 0], [0, 1],
  ]}                                              | ${`0-0, Advantage ${name2}`}
      ${[
    [0, 1], [0, 1], [0, 1], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${'1-0'}
      ${[
    [0, 1], [0, 1], [0, 1], [0, 1],
  ]}                                              | ${'0-1'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${'1-0'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0], [0, 1],
  ]}                                              | ${'1-0, 0-15'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0], [0, 1], [1, 0],
  ]}                                              | ${'1-0, 15-15'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0], [0, 1], [1, 0], [0, 1], [0, 1], [0, 1],
  ]}                                              | ${'1-1'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1],
    [0, 1],
  ]}                                              | ${`1-1, Advantage ${name2}`}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1],
  ]}                                              | ${'1-1, Deuce'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
  ]}                                              | ${`Game, Set, ${name2} wins!`}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
  ]}                                              | ${`Game, Set, ${name2} wins!`}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [0, 1], [0, 1], [0, 1], [0, 1],
  ]}                                              | ${'6-6, 1-4'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${'6-6, 6-6'}
      ${[
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0],
    [1, 0], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1],
    [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0],
  ]}                                              | ${`Game, Set, ${name1} wins!`}
    `('$result when points played are $pointsPlayed',
      ({ pointsPlayed, result }) => {
        const match = startMatch(name1, name2);

        /* eslint-disable-next-line no-restricted-syntax */
        for (const point of pointsPlayed) {
          const [p1Point] = point;
          if (p1Point) {
            match.pointWonBy(name1);
          } else {
            match.pointWonBy(name2);
          }
        }

        expect(match.score()).toEqual(result);
      });
  });
});
